buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


ext {
    springCloudVersion = 'Finchley.SR1'
}

ext['log4j2.version'] = '2.17.0'

dependencies {
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

//    implementation('org.springframework.boot:pring-boot-starter-security')

    // Spring actuator
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('com.squareup.okhttp3:okhttp:3.9.0')

    // Spring consul
    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')

    // Netflix zuul consul
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')

    // Swagger
    implementation('io.springfox:springfox-swagger2:2.7.0')
    implementation('io.springfox:springfox-swagger-ui:2.7.0')

    // Spring data jpa
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('mysql:mysql-connector-java')//must be put on last position
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
